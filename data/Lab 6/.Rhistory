ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`(Intercept)`, na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`log10(headbodylength)`, na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$binomial, na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$binomial, na.rm = FALSE, col = (1:6))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`(Intercept)`, na.rm = FALSE, col = (1:6))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`(Intercept)`, na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`(Intercept)`, na.rm = FALSE, col = (1:20))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`(Intercept)`, na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`log10(headbodylength)`, na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$`log10(headbodylength)`, na.rm = FALSE, col = (1:39))
ranef.m2 <- ranef(m2)
ranef.m2
df_m2 <- data.frame(ranef.m2$binomial)
df_m2
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$X.Intercept., na.rm = FALSE, col = (1:39))
ranef.m2 <- ranef(m2)
ranef.m2
df_m2 <- data.frame(ranef.m2$binomial)
df_m2
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., na.rm = FALSE, col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., na.rm = FALSE, col = (1:39))
ranef.m2
df_m2
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., na.rm = FALSE, col = ranef.m2$binomial)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., intercept = df_m2$X.Intercept., col = ranef.m2$binomial)
View(df_m2)
View(ranef.m2)
ranef.m2[["binomial"]]
df_m2 <- data.frame(ranef.m2$binomial)
df_m2
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., intercept = df_m2$X.Intercept., col = (1:39))
df_m2 <- as.data.frame(ranef.m2$binomial)
df_m2
df_m2 <- data.frame(ranef.m2$binomial)
df_m2
df_m2 <- data.frame(ranef.m2)
df_m2
View(df_m2)
df_m2 <- as.data.frame(ranef.m2)
df_m2
View(df_m2)
df_m2 <- as.data.frame(ranef.m2$binomial)
df_m2
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., intercept = df_m2$X.Intercept., col = embs$binomial)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., intercept = df_m2$X.Intercept., col = embs$binomial)
df_m2 <- data.frame(ranef.m2$binomial)
df_m2
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = df_m2$log10.headbodylength., intercept = df_m2$X.Intercept., col = df_m2$)
df_m2 <- data.frame(ranef.m2$binomial,
species = embs$binomial)
df_m2 <- data.frame(ranef.m2$binomial,
species = embs$binomial)
df_m2 <- data.frame(ranef.m2$binomial,
species = ranef.m2$binomial)
View(df_m2)
df_m2 <- data.frame(ranef.m2$binomial)
View(df_m2)
mutate(species = embs$binomial)
df_m2 <- df_m2 %
df_m2 <- df_m2 %>%
mutate(species = embs$binomial)
df_m2 <- df_m2 %>%
mutate(species = embs$binomial)
df_m2 <- data.frame(ranef.m2$binomial)
library(tidyverse)
df_m2 <- df_m2 %>%
mutate(species = embs$binomial)
ranef.m2 <- ranef(m2)
ranef.m2
df_m2 <- data.frame(ranef.m2$binomial)
View(ranef.m2)
df_m2 <- df_m2 %>%
mutate(species = ranef.m2$binomial)
View(df_m2)
View(ranef.m2[["binomial"]])
View(ranef.m2[["binomial"]])
df_m2 <- data.frame(ranef.m2$binomial)
View(ranef.m2[["binomial"]])
row.names(ranef.m2)
rownames(ranef.m2)
ranef.m2 <- ranef(m2)[[1]]
rownames(ranef.m2)
ranef.m2 <- rownames(ranef.m2)
ranef.m2 <- cbind(ranef.m2, rownames(ranef.m2))
ranef.m2 <- ranef(m2)[[1]]
ranef.m2
ranef.m2 <- cbind(ranef.m2, rownames(ranef.m2))
ranef.m2
ranef.m2 <- ranef(m2)[[1]]
rownames(ranef.m2)
ranef.m2
is.dataframe(ranef.m2)
is.data.frame(ranef.m2)
cbind(ranef.m2, rownames(ranef.m2))
ranef.m2 <- data.frame(ranef.m2, binomial = rownames(ranef.m2))
ranef.m2 <- ranef(m2)[[1]]
ranef.m2 <- data.frame(ranef.m2, binomial = rownames(ranef.m2))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$log10.headbodylength., intercept = ranef.m2$X.Intercept., col = ranef.m2$binomial)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$log10.headbodylength., intercept = ranef.m2$X.Intercept., col = ranef.m2$binomial)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$log10.headbodylength., intercept = ranef.m2$X.Intercept., col = ranef.m2$binomial)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount)))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$log10.headbodylength., intercept = ranef.m2$X.Intercept., col = (1:39))
m2 <- lmer(
sqrt(embryocount) ~
(CONT.10yrmean +
RH.10yrmean +
log10(MAP.10yrmean) +
sqrt(EVAP.10yrmean))^2 +
log10(headbodylength.speciesAVG) + #creating pairwise interactions between variables
(1 | binomial) +
(0 + CONT.10yrmean | binomial) +
(0 + RH.10yrmean | binomial) +
(0 + log10(MAP.10yrmean) | binomial) +
(0 + sqrt(EVAP.10yrmean) | binomial) +
(0 + log10(headbodylength) | binomial),
data = embs,
control = lmerControl(optimizer = "bobyqa")
)
summary(m2)
View(m2)
capture.output(summary(m2), file = "Jordan_lab6_table2.txt")
summary(m2)
summary(m2)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$log10.headbodylength., intercept = ranef.m2$X.Intercept., col = (1:39))
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = ranef.m2$log10.headbodylength., intercept = ranef.m2$X.Intercept., col = (1:39))
pred.m2 <- predict(m2, newdata = embs, type = "response") #predicted values for
pred.m2 <- predict(m2, newdata = embs, type = "response") #predicted values for
pred.df <- data.frame(embs, pred.m2) #bind predictions and original data frame
View(pred.df)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = pred.df$headbodylength, intercept = pred.df$pred.m2, col = pred.df$binomial)
ggplot(
data = embs,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
#labs(title = "Random Slopes and Intercepts", x = "Individual Body Length", y = "Litter Size") +
geom_abline(slope = pred.df$headbodylength, intercept = pred.df$pred.m2, col = pred.df$binomial)
pred.df <- data.frame(pred.m2) #bind predictions and original data frame
pred.df <- data.frame(embs, pred.m2) #bind predictions and original data frame
ggplot(
data = pred.df,
aes(x = log(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_line(aes(log10(headbodylength), pred.m2))
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_line(aes(log10(headbodylength), pred.m2))
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_line(aes(log10(headbodylength), pred.m2))
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_line(aes(log10(headbodylength), pred.m2), col = binomial)
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_line(aes(log10(headbodylength), pred.m2, col = binomial))
min(pred.df$pred.m2)
max(pred.df$pred.m2)
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_segment(aes(log10(headbodylength), pred.m2, col = binomial))
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_segment(aes(log10(headbodylength), pred.m2, col = binomial))
ggplot(
data = pred.df,
aes(x = log10(headbodylength), y = sqrt(embryocount))) +
geom_point() +
geom_segment(aes(log10(headbodylength), pred.m2, xend = log10(headbodylength), yend = pred.m2,col = binomial))
pred <- predict(m2)
pred <- predict(m2)
pred
?model.frame
yend <-
x <-
xend <-
?aggregate
View(m2)
View(m2@frame)
m2@frame
m <- model.frame(m2)[[3]]
m <- model.frame(m2)[,1]
m
View(m2@frame)
HBL <- model.frame(m2)[,8]
HBL
B <- model.frame(m2)[,7]
B
y <- aggregate(EC ~ B, FUN = min)
B <- model.frame(m2)[,7] #species or binomial
EC <- model.frame(m2)[,1] #sqrt(embryocount)
HBL <- model.frame(m2)[,8] #log10(headbodylength)
y <- aggregate(EC ~ B, FUN = min)
y
yend <- aggregate(EC ~ B, FUN = max)
yend
x <- aggregate(HBL ~ B, FUN = min)
xend <- aggregate(HBL ~ B, FUN = max)
x
xend
limit <- data.frame(binomial = B, headbodylength = HBL, pred)
View(limit)
limit <- data.frame(binomial = B, embryocount = EC, headbodylength = HBL, pred)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), y = sqrt(embryocount), color = binomial)
ggplot(
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial))
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(x = x, xend = xend, y = y, yend = yend, color = binomial))
y <- aggregate(EC ~ B, FUN = min)
View(limit)
limit <- data.frame(binomial = B, x = x, xend = xend, y = y, yend = yend)
limit <- data.frame(binomial = B, x = x, xend = xend, y = y, yend = yend)
limit <- data.frame(binomial = B, na.rm = TRUE, x = x, xend = xend, y = y, yend = yend)
binomial = aggregate(EC ~ B, FUN = min)[,1]
binomial
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(x = x, xend = xend, y = y, yend = yend, color = binomial))
limit <- data.frame(binomial = B, x = x, xend = xend, y = y, yend = yend)
limit <- data.frame(binomial = B, x = x, xend = xend, y = y, yend = yend)
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(x = x, xend = xend, y = y, yend = yend, color = binomial))
View(limit)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(x, xend, y, yend, color = binomial))
?geom_segment
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
binomial = aggregate(EC ~ B, FUN = min)[,1] #shows 39 observations
y <- aggregate(EC ~ binomial, FUN = min)
yend <- aggregate(EC ~ binomial, FUN = max)
binomial <- aggregate(EC ~ B, FUN = min)[,1] #shows 39 observations
y <- aggregate(EC ~ binomial, FUN = min)
yend <- aggregate(EC ~ binomial, FUN = max)
binomial <- aggregate(EC ~ B, FUN = min)[,1] #shows 39 observations
y <- aggregate(EC ~ binomial, FUN = min)
y <- aggregate(EC ~ B, FUN = min)
B <- model.frame(m2)[,7] #species or binomial
B
binomial
B <- model.frame(m2)[,7] #species or binomial
EC <- model.frame(m2)[,1] #sqrt(embryocount)
HBL <- model.frame(m2)[,8] #log10(headbodylength)
binomial <- aggregate(EC ~ B, FUN = min)[,1] #shows 39 observations
y <- aggregate(EC ~ B, FUN = min)
yend <- aggregate(EC ~ binomial, FUN = max)
yend <- aggregate(EC ~ B, FUN = max)
x <- aggregate(HBL ~ B, FUN = min)
xend <- aggregate(HBL ~ B, FUN = max)
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
y <- aggregate(EC ~ B, FUN = min)[,2]
yend <- aggregate(EC ~ B, FUN = max)[,2]
x <- aggregate(HBL ~ B, FUN = min)[,2]
xend <- aggregate(HBL ~ B, FUN = max)[,2]
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
?aggregate
binomial <- aggregate(EC ~ B, FUN = min)[,1] #shows 39 observations
y <- aggregate(EC ~ B, FUN = min)[,2]
yend <- aggregate(EC ~ B, FUN = max)[,2]
x <- aggregate(HBL ~ B, FUN = min)[,2]
xend <- aggregate(HBL ~ B, FUN = max)[,1]
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
binomial <- aggregate(EC ~ B, FUN = min)[,1] #shows 39 observations
y <- aggregate(EC ~ B, FUN = min)[,2]
yend <- aggregate(EC ~ B, FUN = max)[,2]
x <- aggregate(HBL ~ B, FUN = min)[,2]
xend <- aggregate(HBL ~ B, FUN = max)[,2]
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
x
xend
y
yend
xend <- aggregate(HBL ~ B, FUN = max)
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
xend <- aggregate(HBL ~ B, FUN = max)[,2]
xend <- aggregate(HBL ~ B, FUN = max)[,3]
xend <- aggregate(HBL ~ B, FUN = max)[,4]
xend <- aggregate(HBL ~ B, FUN = max)[,0]
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
xend <- aggregate(HBL ~ B, FUN = max)[,1]
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
binomial <- aggregate(EC ~ B, FUN = min)[,1] #shows the 39 observations used
y <- aggregate(EC ~ B, FUN = min)[,2] #[,2] makes the length the same and continuous (integer portion of m2)
yend <- aggregate(EC ~ B, FUN = max)[,2]
x <- aggregate(HBL ~ B, FUN = min)[,2]
xend <- aggregate(HBL ~ B, FUN = max)[,2]
limit <- data.frame(binomial = binomial, x = x, xend = xend, y = y, yend = yend)
ggplot(
data = embs) +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
?ggplot
?ggplot title
ggplot(
data = embs) +
ggtitle("Random Slopes and Intercepts by Species - JJ") +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
ggplot(
data = embs) +
ggtitle("Random Slopes and Intercepts by Species - JJ") +
labs(x = "Log Transformed Body Length", y = "Square rooted Embryo Count")
ggplot(
data = embs) +
ggtitle("Random Slopes and Intercepts by Species - JJ") +
labs(x = "Log Transformed Body Length", y = "Square rooted Embryo Count") +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
ggplot(
data = embs) +
ggtitle("Random Slopes and Intercepts by Species - JJ") +
labs(x = "Log Transformed Body Length", y = "Square Rooted Embryo Count") +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
ggplot(
data = embs) +
ggtitle("Random Slopes and Intercepts by Species - JJ") +
labs(x = "Log Transformed Individual Body Length", y = "Square Rooted Litter Size") +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
ggplot(
data = embs) +
ggtitle("Random Slopes and Intercepts by Species - JJ") +
labs(x = "Individual Body Length (log transformed)", y = "Litter Size (square rooted)") +
geom_point(aes(log10(headbodylength), sqrt(embryocount), color = binomial)) +
geom_segment(data = limit, mapping = aes(xend = xend, yend = yend, y = y, x = x, color = binomial))
setwd("/Users/jennajordan/Documents/GitHub/biostats-2/data/Lab 6")

scatterplotMatrix(~ log.duration + inverse.spf + log10.minf + log.epf + log.maxf + log.bandwidth)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 10)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 120)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 120)
hist(log10(bandwidth), main = "Bandwidth", col = "snow4", breaks = 120)
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 120)
hist(log(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log10(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
#Visualize the Data
plot(x = week, y = duration, col = "red")
plot(x = week, y = spf, col = "orange")
plot(x = week, y = epf, col = "yellow")
plot(x = week, y = minf, col = "green")
plot(x = week, y = maxf, col = "blue")
plot(x = week, y = bandwidth, col = "purple")
#Visualize the Data
plot(x = week, y = duration, col = factor(treatment)
#Visualize the Data
plot(x = week, y = duration, col = factor(treatment))
plot(x = week, y = duration, col = factor(treatment))
legend("topleft", inset = .05, legend = c("Treatment", "Control"), col = c("red", "black"), lty = c(1, 1), cex = 1)
legend("topright", inset = .05, legend = c("Treatment", "Control"), col = c("red", "black"), lty = c(1, 1), cex = 1)
plot(x = week, y = duration, col = factor(treatment))
legend("topright", inset = .05, legend = c("Treatment", "Control"), col = c("red", "black"), lty = c(1, 1), cex = 1)
plot(x = week, y = duration, col = factor(treatment))
legend("topright", inset = .05, legend = c("Treatment", "Control"), col = c("red", "black"), lty = c(1, 1), cex = 1)
legend("topright", inset = .05, legend = levels(factor(treatment)), col = factor(treatment) lty = c(1, 1), cex = 1)
legend("topright", inset = .05, legend = levels(factor(treatment)), col = factor(treatment), lty = c(1, 1), cex = 1)
plot(x = week, y = duration, col = factor(treatment))
legend("topright", inset = .05, legend = levels(factor(treatment)), col = factor(treatment), lty = c(1, 1), cex = 1)
legend("topright", inset = .05, legend = levels(factor(treatment)), col = factor(levels(factor(treatment))), lty = c(1, 1), cex = 1)
colors <- c("snow4",
"lightsteelblue3")
plot(x = week, y = duration, col = factor(treatment))
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors[factor(treatment)], lty = c(1, 1), cex = 1)
plot(x = week, y = duration, col = factor(treatment))
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors[factor(treatment)], lty = c(1, 1), cex = 1)
plot(x = week, y = duration, col = colors[factor(treatment)])
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
colors <- c("thistle",
"lightsteelblue3")
plot(x = week, y = duration, col = colors[factor(treatment)])
colors <- c("thistle4",
"lightsteelblue3")
plot(x = week, y = duration, col = colors[factor(treatment)])
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
colors <- c("royalblue",
"magenta")
plot(x = week, y = duration, col = colors[factor(treatment)])
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
plot(x = week, y = log.duration, col = colors[factor(treatment)])
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
legend("bottomleft", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
plot(x = week, y = log.duration, col = colors[factor(treatment)])
legend("bottomleft", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
legend("bottomleft", legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
plot(x = week, y = log.duration, col = colors[factor(treatment)])
legend("bottomleft", legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
par(mfrow = c(1, 2))
plot(x = week, y = duration, col = colors[factor(treatment)])
legend("topright", inset = .05, legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
plot(x = week, y = log.duration, col = colors[factor(treatment)])
legend("bottomleft", legend = levels(factor(treatment)), col = colors, lty = c(1, 1), cex = 1)
par(mfrow = c(1, 2))
plot(x = week, y = duration, col = colors[factor(treatment)])
plot(x = week, y = log.duration, col = colors[factor(treatment)])
dat <- ggplot2::normal.data
summary(normal.data$duration)
boxplot.stats(normal.data$duration)$out
qqPlot(normal.data$duration)
qqPlot(normal.data$duration)
library(outliers)
install.packages(outliers)
library(outliers)
install.packages(outliers)
install.packages("outliers")
library(outliers)
#Duration
summary(normal.data$duration)
boxplot.stats(normal.data$duration)$out
qqPlot(normal.data$duration) #9 & 30 are outliers - does not follow normal distribution
#Start Frequency
summary(spf)
boxplot.stats(spf)$out
qqPlot(spf) #9 & 30 are outliers - does not follow normal distribution
#End Peak Frequency
summary(epf)
boxplot.stats(epf)$out
qqPlot(epf) #23 & 97 are outliers - does not follow normal distribution
#Minimum Frequency
summary(minf)
boxplot.stats(minf)$out
qqPlot(minf) #23 & 97 are outliers - does not follow normal distribution
#Maximum Frequency
summary(maxf)
boxplot.stats(maxf)$out
qqPlot(maxf) #23 & 97 are outliers - does not follow normal distribution
#Bandwidth
summary(bandwidth)
boxplot.stats(bandwidth)$out
qqPlot(bandwidth) #23 & 97 are outliers - does not follow normal distribution
#Raw Data
par(mfrow = c(2, 3))
hist(duration, col = "antiquewhite4")
hist(spf, col = "lightsteelblue3")
hist(epf, col = "lavenderblush3")
hist(minf, col = "lightblue4")
hist(duration, col = "antiquewhite4")
hist(spf, col = "lightsteelblue3")
#Start End Frequency
summary(spf)
boxplot.stats(spf)$out
qqPlot(spf) #23 & 97 are outliers - does not follow normal distribution
boxplot(duration)
boxplot.stats(normal.data$duration)$out
boxplot(duration)
boxplot.stats(normal.data$duration)$out
duration.o <- boxplot.stats(normal.data$duration)$out
out_ind <- which(duration %in% c(duration.o))
out_ind
rownames(normal.data)
out_ind
clean_normal.data <- normal.data[-which(rownames(normal.data) == "2")]
View(clean_normal.data)
clean_normal.data <- normal.data$duration %>%
filter(!row_number() %in% c(2,4,5,7,8,9,27,28,29,30,36))
out_ind
duration.o <- boxplot.stats(normal.data$duration)$out
duration.o
data <- data.frame(x1 = 1:5,
x2 = letters[1:5],
x3 = "x")
View(data)
data[data$x1 != 2, ] #only retain values that are unequal to 2
normal.data <- na.omit(duration.0)
normal.data <- na.omit(duration.o)
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
View(normal.data)
df <- data.frame(index=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
var1=c(4, 4, 5, 4, 3, 2, 8, 9, 4, 5),
var2=c(1, 2, 4, 4, 6, 9, 7, 8, 5, 29),
var3=c(9, 9, 9, 5, 5, 3, 4, 5, 11, 34))
outliers <- function(x) {
Q1 <- quantile(x, probs=.25)
Q3 <- quantile(x, probs=.75)
iqr = Q3-Q1
upper_limit = Q3 + (iqr*1.5)
lower_limit = Q1 - (iqr*1.5)
x > upper_limit | x < lower_limit
}
View(df)
remove_outliers <- function(df, cols = names(df)) {
for (col in cols) {
df <- df[!outliers(df[[col]]),]
}
df
}
View(remove_outliers)
remove_outliers <- function(df, cols = names(df)) {
for (col in cols) {
df <- df[!outliers(df[[col]]),]
}
df
}
df <- data.frame(index=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
var1=c(4, 4, 5, 4, 3, 2, 8, 9, 4, 5),
var2=c(1, 2, 4, 4, 6, 9, 7, 8, 5, 29),
var3=c(9, 9, 9, 5, 5, 3, 4, 5, 11, 34))
remove_outliers <- function(df, cols = names(df)) {
for (col in cols) {
df <- df[!outliers(df[[col]]),]
}
df
}
remove_outliers(df, c('var1', 'var2', 'var3'))
outliers <- function(x) {
Q1 <- quantile(x, probs=.25)
Q3 <- quantile(x, probs=.75)
iqr = Q3-Q1
upper_limit = Q3 + (iqr*1.5)
lower_limit = Q1 - (iqr*1.5)
x > upper_limit | x < lower_limit
}
remove_outliers <- function(normal.data, cols = names(normal.data)) {
for (col in cols) {
normal.data <- normal.data[!outliers(normal.data[[col]]),]
}
df
}
remove_outliers(normal.data, c('duration', 'start_peak_freq', 'end_peak_freq'))
remove_outliers(normal.data, c('duration', 'start_peak_freq', 'end_peak_freq'))
outliers <- function(x) {
Q1 <- quantile(x, probs=.25)
Q3 <- quantile(x, probs=.75)
iqr = Q3-Q1
upper_limit = Q3 + (iqr*1.5)
lower_limit = Q1 - (iqr*1.5)
x > upper_limit | x < lower_limit
}
remove_outliers <- function(normal.data, cols = names(normal.data)) {
for (col in cols) {
normal.data <- normal.data[!outliers(normal.data[[col]]),]
}
df
}
remove_outliers(normal.data, c('duration', 'start_peak_freq', 'end_peak_freq'))
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
remove_outliers(normal.data, c('duration', 'start_peak_freq', 'end_peak_freq'))
View(normal.data)
boxplot(duration)
boxplot(normal.data$duration)
remove_outliers(normal.data, c('duration', 'start_peak_freq', 'end_peak_freq'))
boxplot(normal.data$duration)
#Duration
summary(normal.data$duration)
boxplot(duration)
#Name objects
duration <- normal.data$duration
spf <- normal.data$start_peak_freq
epf <- normal.data$end_peak_freq
minf <- normal.data$min_freq
maxf <- normal.data$max_freq
bandwidth <- normal.data$bandwidth
treatment <- normal.data$Treatment
week <- normal.data$week_number
#Duration
summary(normal.data$duration)
boxplot(duration)
duration.o <- boxplot.stats(normal.data$duration)$out
duration.o
qqPlot(normal.data$duration) #9 & 30 are outliers - does not follow normal distribution
out_ind <- which(duration %in% c(duration.o))
out_ind
boxplot(duration)$out
duration.o <- boxplot.stats(normal.data$duration)$out
duration.o
boxplot(duration)$out
#Detection of Outliers
install.packages("ggstatsplot")
install.packages("ggstatsplot")
boxplot(duration)$out
out_ind <- which(duration %in% c(duration.o))
out_ind
#Detection of Outliers
library(ggstatsplot)
ggbetweenstats(normal.data, wool, breaks, outlier.tagging = TRUE)
ggbetweenstats(normal.data, duration, breaks, outlier.tagging = TRUE)
ggbetweenstats(normal.data, duration, spf, outlier.tagging = TRUE)
ggbetweenstats(normal.data, duration, outlier.tagging = TRUE)
data("warpbreaks")
force(warpbreaks)
View(warpbreaks)
ggbetweenstats(normal.data, duration, start_peak_frequency, outlier.tagging = TRUE)
ggbetweenstats(normal.data, duration, start_peak_freq, outlier.tagging = TRUE)
ggbetweenstats(normal.data, duration, outlier.tagging = TRUE)
ggbetweenstats(normal.data, week, duration, outlier.tagging = TRUE)
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
boxplot(duration)$out
duration.o <- boxplot(duration)$out
duration.o
no.o.duration <- subset(normal.data, duration.o)
boxplot.stats(duration)$out
duration.o <- boxplot.stats(duration)$out
no.o.duration <- subset(normal.data, duration.o)
no.o.duration <- subset(normal.data, duration.o)
#Duration
summary(normal.data$duration)
#Duration
summary.duration <- summary(normal.data$duration)
summary.duration
summary.duration$1st Qu.
#Duration
summary(normal.data$duration)
no.o.duration <- subset(normal.data, normal.data$duration > 0.014 & < 0.03200)
no.o.duration <- subset(normal.data, normal.data$duration > 0.014 < 0.03200)
no.o.duration <- subset(normal.data, normal.data$duration > 0.014 & normal.data$duration < 0.03200)
ggbetweenstats(no.o.duration, week_number, duration, outlier.tagging = TRUE)
View(no.o.duration)
clean_normal.data <- subset(normal.data, normal.data$duration > 0.014 & normal.data$duration < 0.03200)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE, main = "Duration Without Outliers")
clean_normal.data <- normal.data
boxplot(normal.data$duration, plot = FALSE)$out
clean_normal.data <- normal.data[-which(normal.data$duration %in% outliers,)]
duration.o <- boxplot.stats(duration)$out
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o,)]
View(clean_normal.data)
boxplot(clean_normal.data$duration)
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o,)]
boxplot(clean_normal.data$duration)
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
library(readxl)
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
head(normal.data)
library(tidyverse)
library(ggplot2)
library(car)
#Duration
summary(normal.data$duration)
boxplot(duration)$out
duration.o <- boxplot.stats(duration)$out
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o,)]
#Duration
summary(normal.data$duration)
boxplot(duration)$out
duration.o <- boxplot.stats(duration)$out
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o,)]
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
#Duration
summary(normal.data$duration)
boxplot(duration)$out
duration.o <- boxplot.stats(duration)$out
duration.o
boxplot(normal.data$duration)$out
duration.o <- boxplot.stats(duration)$out
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o,)]
boxplot(clean_normal.data$duration)
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o),]
boxplot(clean_normal.data$duration)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
#Start End Frequency
spf.o <- boxplot.stats(normal.data$start_peak_freq)$out
spf.o
#Start End Frequency
spf.o <- boxplot.stats(normal.data$start_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$start_peak_freq %in% spf.o),]
#Start End Frequency
ggbetweenstats(normal.data, week_number, spf, outlier.tagging = TRUE)
#Start End Frequency
ggbetweenstats(normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
#Start End Frequency
ggbetweenstats(normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
spf.o <- boxplot.stats(normal.data$start_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$start_peak_freq %in% spf.o),]
spf.o <- boxplot.stats(normal.data$start_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$start_peak_freq %in% spf.o),]
ggbetweenstats(clean_normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
#Start End Frequency
ggbetweenstats(normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
#End Peak Frequency
ggbetweenstats(normal.data, week_number, end_peak_freq, outlier.tagging = TRUE)
epf.o <- boxplot.stats(normal.data$end_peak_freq)$out
epf.o <- boxplot.stats(normal.data$end_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$end_peak_freq %in% spf.o),]
#End Peak Frequency
ggbetweenstats(normal.data, week_number, end_peak_freq, outlier.tagging = TRUE)
epf.o <- boxplot.stats(normal.data$end_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$end_peak_freq %in% epf.o),]
ggbetweenstats(clean_normal.data, week_number, end_peak_freq, outlier.tagging = TRUE)
epf.o
#Minimum Frequency
ggbetweenstats(normal.data, week_number, min_freq, outlier.tagging = TRUE)
minf.o <- boxplot.stats(normal.data$min_freq)$out
minf.o
clean_normal.data <- normal.data[-which(normal.data$min_freq %in% minf.o),]
ggbetweenstats(clean_normal.data, week_number, min_freq, outlier.tagging = TRUE)
#Maximum Frequency
ggbetweenstats(normal.data, week_number, max_freq, outlier.tagging = TRUE)
maxf.o <- boxplot.stats(normal.data$max_freq)$out
clean_normal.data <- normal.data[-which(normal.data$max_freq %in% maxf.o),]
ggbetweenstats(clean_normal.data, week_number, max_freq, outlier.tagging = TRUE)
#Bandwidth
ggbetweenstats(normal.data, week_number, bandwidth, outlier.tagging = TRUE)
bandwidth.o <- boxplot.stats(normal.data$bandwidth)$out
clean_normal.data <- normal.data[-which(normal.data$bandwidth %in% bandwidth.o),]
bandwidth.o
ggbetweenstats(clean_normal.data, week_number, bandwidth, outlier.tagging = TRUE)
#New Visualization with Clean Data
scatterplotMatrix( ~ clean_normal.data$duration + clean_normal.data$start_peak_freq + clean_normal.data$end_peak_freq + clean_normal.data$min_freq + clean_normal.data$max_freq + clean_normal.data$bandwidth)
#Clean Data Histograms
par(mfrow = c(2, 3))
hist(clean_normal.data$duration, col = "antiquewhite4")
hist(clean_normal.data$start_peak_freq, col = "lightsteelblue3")
hist(clean_normal.data$end_peak_freq, col = "lavenderblush3")
hist(clean_normal.data$min_freq, col = "lightblue4")
hist(clean_normal.data$max_freq, col = "thistle4")
hist(clean_normal.data$bandwidth, col = "snow4")
par(mfrow = c(2, 3))
hist(log(clean_normal.data$duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 10) #
hist(log10(clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(clean_normal.data$bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(log(clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log10(clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(log10(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(log(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log10(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
par(mfrow = c(2, 3))
hist(log(clean_normal.data$duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 10) #
hist(log10(clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log10(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(log(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(clean_normal.data$bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(clean_normal.data$duration, col = "antiquewhite4")
hist(clean_normal.data$start_peak_freq, col = "lightsteelblue3")
hist(clean_normal.data$end_peak_freq, col = "lavenderblush3")
hist(clean_normal.data$min_freq, col = "lightblue4")
hist(clean_normal.data$max_freq, col = "thistle4")
hist(clean_normal.data$bandwidth, col = "snow4")
hist(1/clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist((1/clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist((1/clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log10(clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist((1/clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
par(mfrow = c(2, 3))
hist(log(clean_normal.data$duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 10) #
hist((1/clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log10(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(log(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(clean_normal.data$bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
#Clean Data Histograms
par(mfrow = c(2, 3))
hist(clean_normal.data$duration, col = "antiquewhite4")
hist(clean_normal.data$start_peak_freq, col = "lightsteelblue3")
hist(clean_normal.data$end_peak_freq, col = "lavenderblush3")
hist(clean_normal.data$min_freq, col = "lightblue4")
hist(clean_normal.data$max_freq, col = "thistle4")
hist(clean_normal.data$bandwidth, col = "snow4")
hist((1/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist((2/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist((1/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(clean_normal.data$max_freq - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist((1/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(clean_normal.data$bandwidth, col = "snow4")
hist(log(clean_normal.data$bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist((1/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 15) #
hist(log(clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 15) #
hist(log10(clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 15) #
hist((1/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 15) #
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 10) #
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 15) #
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 15) #
hist(log(clean_normal.data$duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist(log(clean_normal.data$duration), main = "Duration", col = "antiquewhite4", breaks = 15) #
hist(clean_normal.data$duration, col = "antiquewhite4")
hist(log(clean_normal.data$duration), main = "Duration", col = "antiquewhite4", breaks = 15) #
hist(clean_normal.data$start_peak_freq, col = "lightsteelblue3")
hist((1/clean_normal.data$start_peak_freq), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 15) #
hist(clean_normal.data$end_peak_freq, col = "lavenderblush3")
hist(log10(clean_normal.data$end_peak_freq), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(clean_normal.data$min_freq, col = "lightblue4")
hist((1/clean_normal.data$min_freq), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(clean_normal.data$max_freq, col = "thistle4")
hist((1/clean_normal.data$max_freq), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 15) #
hist(clean_normal.data$bandwidth, col = "snow4")
hist(log(clean_normal.data$bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(clean_normal.data$max_freq, col = "thistle4")
hist(log(clean_normal.data$bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
#Start End Frequency
par(mfrow = c(2,1))
ggbetweenstats(normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
#Start End Frequency
par(mfrow = c(1,2))
ggbetweenstats(normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
ggbetweenstats(normal.data, week_number, duration, outlier.tagging = TRUE)
clean_normal.data <- normal.data[-which(normal.data$duration %in% duration.o),]
ggbetweenstats(clean_normal.data, week_number, duration, outlier.tagging = TRUE)
#Start End Frequency
ggbetweenstats(normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
ggbetweenstats(clean_normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
spf.o <- boxplot.stats(normal.data$start_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$start_peak_freq %in% spf.o),]
ggbetweenstats(clean_normal.data, week_number, start_peak_freq, outlier.tagging = TRUE)
#End Peak Frequency
ggbetweenstats(normal.data, week_number, end_peak_freq, outlier.tagging = TRUE)
epf.o <- boxplot.stats(normal.data$end_peak_freq)$out
clean_normal.data <- normal.data[-which(normal.data$end_peak_freq %in% epf.o),]
ggbetweenstats(clean_normal.data, week_number, end_peak_freq, outlier.tagging = TRUE)
#Minimum Frequency
ggbetweenstats(normal.data, week_number, min_freq, outlier.tagging = TRUE)
minf.o <- boxplot.stats(normal.data$min_freq)$out
clean_normal.data <- normal.data[-which(normal.data$min_freq %in% minf.o),]
ggbetweenstats(clean_normal.data, week_number, min_freq, outlier.tagging = TRUE)
#Maximum Frequency
ggbetweenstats(normal.data, week_number, max_freq, outlier.tagging = TRUE)
maxf.o <- boxplot.stats(normal.data$max_freq)$out
clean_normal.data <- normal.data[-which(normal.data$max_freq %in% maxf.o),]
ggbetweenstats(clean_normal.data, week_number, max_freq, outlier.tagging = TRUE)
#Bandwidth
ggbetweenstats(normal.data, week_number, bandwidth, outlier.tagging = TRUE)
bandwidth.o <- boxplot.stats(normal.data$bandwidth)$out
clean_normal.data <- normal.data[-which(normal.data$bandwidth %in% bandwidth.o),]
ggbetweenstats(clean_normal.data, week_number, bandwidth, outlier.tagging = TRUE)
#New Visualization with Clean Data
scatterplotMatrix( ~ clean_normal.data$duration + clean_normal.data$start_peak_freq + clean_normal.data$end_peak_freq + clean_normal.data$min_freq + clean_normal.data$max_freq + clean_normal.data$bandwidth)

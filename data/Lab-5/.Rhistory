hist(log(minf + 6))
hist(log(minf + 0.1))
hist(log(minf))
hist(log10(spf))
hist(log(spf))
hist(log10(spf))
hist(log(spf))
hist(log10(spf + 10))
hist(log10(spf + 1))
hist(log10(spf + 100))
hist(log10(spf + 10))
hist(log10(spf + 5000))
hist(log10(spf + 300))
hist(log10(spf))
hist((1/spf))
hist(log(1/spf))
hist(log(2/spf))
hist(log(4/spf))
hist(log(0.1/spf))
hist(log(0.5/spf))
hist(log(1.5/spf))
hist(log(1/spf))
hist(log(spf))
hist(log(0.2/spf))
hist(log(0.01/spf))
hist(log(0.03/spf))
hist(log(0.05/spf))
hist(log(0.001/spf))
hist(log(0.021/spf))
hist(log(0.04/spf))
hist(1/spf))
hist((1/spf))
hist(spf)
hist((1/spf))
hist(log(duration))
hist((1/spf))
hist(log(epf))
hist(log(epf + 3))
hist(log(epf + 5))
hist(log(epf + 1000))
hist(log(epf + 0.1))
hist(log(epf + 021))
hist(log(epf + 0.3))
hist(log(epf))
hist(log(minf))
hist(sqrt(minf))
hist(log10(minf))
hist(log10(minf + 5))
hist(log10(minf + 1000))
hist(log10(minf + 0.1))
hist(log10(minf))
hist(1/minf)
hist(2/minf)
hist(3/minf)
hist(4/minf)
hist(5/minf)
hist(10/minf)
hist(8/minf)
hist(8.5/minf)
hist(8/minf)
hist(1/minf)
hist(log(minf))
hist(sqrt(minf))
hist(minf^1/2)
hist((minf)^1/2)
hist((minf)^1/3)
hist(log(minf))
hist(minf)
hist((1/spf))
hist(spf)
hist(epf)
hist(log(minf))
hist(1/(epf))
hist(epf)
hist(1/(epf))
hist(log(epf))
hist(log(epf))
hist((log(epf))
hist(log(epf))
hist((1/spf))
hist(log(duration))
hist(log(duration))*
hist((1/spf))*
hist(log(epf))*
hist(log(minf))
hist(log(duration))*
hist((1/spf))*
hist(log(epf))*
hist(log(minf))
hist(log(duration))*
hist((1/spf))*
hist(log(epf))*
hist(log(minf))
hist(log(minf))
hist(log10(minf))
hist(log10(minf - 10))
hist(log10(minf - 100))
hist(log10(minf + 100))
hist(log10(minf - 200))
hist(log10(minf - 1200))
hist(log10(minf - 2000))
hist(log10(minf - 4000))
hist(log10(minf - 5000))
hist(log10(minf - 6000))
hist(log10(minf - 8000))
hist(log10(minf - 6000))
hist(log10(minf - 5000))
hist(log10(minf))
hist(log(maxf))
hist(log(maxf - 5000))
hist(log(maxf - 8000))
hist(log(maxf - 10000))
hist(log(maxf - 9000))
hist(log(bandwidth))
hist(log10(bandwidth))
hist(log(bandwidth))
#Transformations
par(mfrow = c(2, 3))
hist(log(duration)) #
hist((1/spf)) #
hist(log(epf)) #
hist(log10(minf)) #
hist(log(maxf - 9000)) #
hist(log(bandwidth))
hist(log(duration), main = "Duration") #
hist((1/spf), main = "Start Peak Frequency") #
hist(log10(minf), main = "Minimum Frequency") #
#Transformations
par(mfrow = c(2, 3))
hist(log(duration), main = "Duration") #
hist((1/spf), main = "Start Peak Frequency") #
hist(log(epf), main = "End Peak Frequency") #
hist(log10(minf), main = "Minimum Frequency") #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude") #
hist(log(bandwidth), main = "Bandwidth")
hist(log(duration), main = "Duration", fill = "blue") #
hist(log(duration), main = "Duration", color = "blue") #
hist(log(duration), main = "Duration", colors = "blue") #
?hist
hist(log(duration), main = "Duration", col = "blue", bin = 10) #
hist(log(duration), main = "Duration", col = "blue", bin = 5) #
hist(log(duration), main = "Duration", col = "blue", breaks = 5) #
hist(log(duration), main = "Duration", col = "blue", breaks = 3) #
hist(log(duration), main = "Duration", col = "blue", breaks = 10) #
hist(log(duration), main = "Duration", col = "blue", breaks = 11) #
hist(log(duration), main = "Duration", col = "blue", breaks = 5) #
hist(log(duration), main = "Duration", col = "blue", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 5) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 4) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 3) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 7) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 8) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 11) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 21) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 10) #
hist(log(duration), main = "Duration", col = "blue", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 10) #
hist(log(spf), main = "Start Peak Frequency", col = "lightblue", breaks = 10)
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 8) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4") #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 7) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 3) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 20) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 12) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 11) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 8) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 6) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 15) #
hist(log10(minf), main = "Minimum Frequency", col = "pink", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "pink", breaks = 8) #
hist(log10(minf), main = "Minimum Frequency", col = "pink", breaks = 5) #
hist(log10(minf), main = "Minimum Frequency", col = "pink", breaks = 15) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 10) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 15) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 5) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 8) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 10) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 20) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "seagreen", breaks = 10)
hist(log(bandwidth), main = "Bandwidth", col = "seagreen", breaks = 5)
hist(log(bandwidth), main = "Bandwidth", col = "seagreen", breaks = 15)
#Transformations
par(mfrow = c(2, 3))
hist(log(duration), main = "Duration", col = "blue", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightblue", breaks = 10) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "pink", breaks = 15) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "seagreen", breaks = 15)
hist(log(duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "darkseagreen", breaks = 10) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "plum4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "rosybrown", breaks = 15)
hist(log(duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "darkseagreen", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "rosybrown", breaks = 15)
hist(log(duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "darkseagreen", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(log(duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightsteelblue4", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(log(duration), main = "Duration", col = "antiquewhite4", breaks = 10) #
hist((1/spf), main = "Start Peak Frequency", col = "lightsteelblue3", breaks = 10) #
hist(log10(minf), main = "Minimum Frequency", col = "lavenderblush3", breaks = 15) #
hist(log(epf), main = "End Peak Frequency", col = "lightblue4", breaks = 10) #
hist(log(maxf - 9000), main = "Frequency at Max Amplitude", col = "thistle4", breaks = 10) #
hist(log(bandwidth), main = "Bandwidth", col = "snow4", breaks = 15)
hist(bandwidth, col = "snow4")
hist(maxf, col = "thistle4")
#Raw Data
par(mfrow = c(2, 3))
hist(duration, col = "antiquewhite4")
hist(spf, col = "lightsteelblue3")
hist(epf, col = "lavenderblush3")
hist(minf, col = "lightblue4")
hist(maxf, col = "thistle4")
hist(bandwidth, col = "snow4")
library(lme4)
library(lattice)
install.packages("lme4")
library(lme4)
library(matrix)
install.packages("Matrix")
library(matrix)
library(matrix)
library(lme4)
library(ggplot2)
library(lattice)
library(Matrix)
library(lme4)
library(ggplot2)
library(lattice)
data(sleepstudy)
head(sleepstudy)
hist(sleepstudy$Reaction)
m0 <- lmer(Reaction ~ Days + (Days | Subject), data = sleepstudy)
summary(m0)
m0.ranef <- ranef(m0)
m0.ranef
dotplot(m0.ranef)
pred.Reaction <- predict(m0, newdata = sleepstudy, type = "response")
pred.df <- data.frame(sleepstudy, pred.Reaction)
ggplot(data = pred.df, aes(Days, Reaction)) +
geom_point() +
geom_line(aes(Days, pred.Reaction), col = "darkolivegreen") +
facet_wrap(vars(Subject))
library(datasets)
data("ChickWeight")
hist(ChickWeight$weight)
plot(ChickWeight)
head(ChickWeight)
m1 <- lmer(weight ~ poly(Time) x Diet, data = ChickWeight)
m1 <- lm(weight ~ poly(Time) x Diet, data = ChickWeight)
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight)
m1
(x | Chick)
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight) + (x | Chick)
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight) + (Time | Chick)
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight) + (Time | Chick)
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight) + (Time | Chick)
m1 <- lm(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
m1 <- lm(weight ~ poly(Time) * Diet + (x | Chick), data = ChickWeight)
data("ChickWeight")
m1 <- lm(weight ~ poly(Time) * Diet + ( | Chick), data = ChickWeight)
m1
m1 <- lm(weight ~ poly(Time) * Diet + ( | Chick), data = ChickWeight)
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight)
m1
#c.
m1 <- lm(weight ~ poly(Time) * Diet + (Time | Chick) data = ChickWeight)
#c.
m1 <- lm(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
#c.
m1 <- lm(weight ~ poly(Time, 2) * Diet + (Time | Chick), data = ChickWeight)
#c.
m1 <- lm(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
#c.
m1 <- lmer(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
#c.
m2 <- lmer(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
m2
#a.& b.
m1 <- lm(weight ~ poly(Time) * Diet, data = ChickWeight)
m1
#c.
m2 <- lmer(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
m2
setwd("/Users/jennajordan/Documents/GitHub/biostats-2/data/Lab-5")
capture.output(summary(m2), file = "Jordan_table1.txt")
m1.ranef <- ranef(m2)
dotplot()
dotplot(m1.ranef)
m1.ranef <- ranef(m2)
dotplot(m1.ranef)
#c.
m2 <- lmer(weight ~ poly(Time, 2) * Diet + (Time | Chick), data = ChickWeight)
m2
#c.
m2 <- lmer(weight ~ poly(Time) * Diet + (Time | Chick), data = ChickWeight)
m2
#c.
m2 <- lmer(weight ~ poly(Time, 2) * Diet + (Time | Chick), data = ChickWeight)
m2
capture.output(summary(m2), file = "Jordan_table1.txt")
m3 <- lmer(weight ~ poly(Time, 2) * Diet + (0 + Time | Chick)
m3 <- lmer(weight ~ poly(Time, 2) * Diet + (0 + Time | Chick))
m3 <- lmer(weight ~ poly(Time, 2) * Diet + (0 + Time | Chick))
m3 <- lmer(weight ~ poly(Time, 2) * Diet + (0 + Time | Chick))
m3 <- lmer(Weight ~ poly(Time, 2) * Diet + (0 + Time | Chick))
m3 <- lmer(Weight ~ poly(Time, 2) * Diet + (0 + Time | Chick), data = ChickWeight)
head(ChickWeight)
m3 <- lmer(weight ~ poly(Time, 2) * Diet + (0 + Time | Chick), data = ChickWeight)
m3
plot(m3)
capture.output(summary(m3), file = "Jordan_table2.txt")
?anova
anova(m2, m3)
aov <- anova(m2, m3)
aov
capture.output(summary(aov), file = "Jordan_table3.txt")
capture.output(summary(m2), file = "Jordan_lab5_table1.txt")
capture.output(summary(m3), file = "Jordan_lab5_table2.txt")
capture.output(summary(aov), file = "Jordan_lab5_table3.txt")
pred.Chick <- predict(m2, newdata = ChickWeight, type = "response")
pred.df <- data.frame(ChickWeight, pred.Chick)
gglplot(data = pred.chick.df, aes(weight, Chick)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
gglplot2(data = pred.chick.df, aes(weight, Chick)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(weight, Chick)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
pred.Chick <- predict(m2, newdata = ChickWeight, type = "response")
pred.chick.df <- data.frame(ChickWeight, pred.Chick)
ggplot(data = pred.chick.df, aes(weight, Chick)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(weight, Chick)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
aov <- anova(m2, m3)
aov
#c.
m2 <- lmer(weight ~ poly(Time, 2) * Diet + (Time | Chick), data = ChickWeight)
m2
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
pred.Chick <- predict(m3, newdata = ChickWeight, type = "response")
pred.chick.df <- data.frame(ChickWeight, pred.Chick)
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
pred.Chick <- predict(m2, newdata = ChickWeight, type = "response")
pred.chick.df <- data.frame(ChickWeight, pred.Chick)
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen")
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(var(Subject))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(var(Subject))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(var(Chick))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(var(chick))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(var(Chick))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Chick, time)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Chick, Time)) +
geom_point() +
geom_line(aes(weight, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(time, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
#c.
m2 <- lmer(weight ~ poly(Time, 2) * Diet + (Time | Chick), data = ChickWeight)
m2
pred.Chick <- predict(m2, newdata = ChickWeight, type = "response")
pred.chick.df <- data.frame(ChickWeight, pred.Chick)
ggplot(data = pred.chick.df, aes(Chick, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "darkolivegreen") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "aquamarine") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "maroon3") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "palegreen4") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "springreen4") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
# geom_point() +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = Chick) +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point() +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 0.2) +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
labs(title = "", x = "", y = "") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 1) +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
labs(title = "", x = "", y = "") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 0.5) +
geom_line(aes(Time, pred.Chick), col = "springgreen4") +
labs(title = "", x = "", y = "") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 0.5) +
geom_line(aes(Time, pred.Chick), col = "springgreen4", size = 1.5) +
labs(title = "", x = "", y = "") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 0.5) +
geom_line(aes(Time, pred.Chick), col = "springgreen4", linewidth = 1) +
labs(title = "", x = "", y = "") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 0.5) +
geom_line(aes(Time, pred.Chick), col = "springgreen4", linewidth = 1) +
labs(title = "Chick-Specific Growth Curves through Time", x = "Time", y = "Weight") +
facet_wrap(vars(Chick))
ggplot(data = pred.chick.df, aes(Time, weight)) +
geom_point(alpha = 0.5) +
geom_line(aes(Time, pred.Chick), col = "springgreen4", linewidth = 1) +
labs(title = "Chick-Specific Growth Curves through Time", x = "Time", y = "Weight") +
facet_wrap(vars(Chick))

qqline(normal.data$amplitude)
qqnorm(log10(normal.data$amplitude))
qqline(log10(normal.data$amplitude))
hist(duration, col = "antiquewhite4")
hist(spf, col = "lightsteelblue3")
hist(1/normal.data$amplitude)
hist(epf, col = "lavenderblush3")
hist(minf, col = "lightblue4")
hist(epf, col = "lavenderblush3")
qqnorm(log10(normal.data$amplitude))
qqline(log10(normal.data$amplitude))
qqnorm(log(normal.data$amplitude))
qqline(log(normal.data$amplitude))
shapiro.test(log10(normal.data$amplitude))
shapiro.test(normal.data$amplitude)
qqnorm(1/normal.data$amplitude)
qqnorm(log10(normal.data$amplitude))
hist(log10(normal.data$amplitude))
lines(density(normal.data$amplitude))
shapiro.test(log10(normal.data$amplitude))
shapiro.test(log(normal.data$amplitude))
shapiro.test(normal.data$amplitude)
shapiro.test(normal.data$amplitude^1/2) #p-value needs to be above 0.05
hist(normal.data$amplitude^1/2)
hist(normal.data$amplitude^2)
hist(sqrt(normal.data$amplitude))
hist(log(normal.data$amplitude))
hist(log10(normal.data$amplitude))
library(vegan)
library(lattice)
library(vegan)
pca <- prcomp(normal.data)
rip.normal <- subset(normal.data, select = duration:bandwidth)
View(rip.normal)
pca <- prcomp(rip.normal)
screeplot(rip.normal)
screeplot(pca)
head(pca)
#Ordination in Space
rip.normal.rda <- rda(rip.normal, scale = TRUE)
ordiplot(rip.normal.rda, type = 'text')
ordieclipse(rip.normal.rda, type = 'text')
p <- ordiplot(rip.normal.rda, display = 'treatment')
p <- ordiplot(rip.normal.rda, display = 'site')
ordieclipse(p, groups = as.factor(normal.data$Treatment), conf = 0.9, col = cols)
library(lattice)
library(vegan)
p <- ordiplot(rip.normal.rda, display = 'site')
ordieclipse(p, groups = as.factor(normal.data$Treatment), conf = 0.9, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.9, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.95, col = cols)
ordiellipse(p, groups = as.factor(normal.data$amplitude), conf = 0.95, col = cols)
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.95, col = cols)
p <- ordiplot(rip.normal.rda, display = 'sites')
p <- ordiplot(rip.normal.rda, display = 'site')
p <- ordiplot(rip.normal.rda, display = 'site')
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.95, col = cols)
ordiplot(rip.normal.rda, type = 'text')
screeplot(pca) #7 groups
head(pca)
#Ordination in Space
rip.normal.rda <- rda(rip.normal, scale = TRUE)
ordiplot(rip.normal.rda, type = 'text')
p <- ordiplot(rip.normal.rda, display = 'site')
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.95, col = cols)
ordiellipse(p, groups = as.factor(normal.data$duration), conf = 0.95, col = cols)
ordiellipse(p, conf = 0.95, col = cols)
?ordiellipse
ordicluster(p, conf = 0.95, col = cols)
ordispider(p)
ordiellipse(p, groups = normal.data$week_number, conf = 0.95, col = cols)
ordiellipse(p, groups = rip.normal, conf = 0.95, col = cols)
ordiellipse(p, groups = rip.normal, conf = 0.95, col = cols)
ordiellipse(p, groups = normal.data$Treatment, conf = 0.95, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.95, col = cols)
?rep_len
birdhab <- read.csv("/Users/jennajordan/Downloads/birdhab.csv", header = TRUE)
head(birdhab)
library(vegan)
head(birdhab$SUB)
View(birdhab)
ordiplot(rip.hab.rda, choices = c(1,2), type = 'text', scaling = 2)
rip.hab.pca <- prcomp(rip.hab, scale = TRUE) #PC1, absorbs the most amounts of variance
rip.hab.rda <- rda(rip.hab, scale = TRUE)
rip.bird <- subset(birdhab, select = AMGO:WWPE)
rip.hab <- subset(birdhab, select = VAREA:CONEDGE)
rip.hab.pca <- prcomp(rip.hab, scale = TRUE) #PC1, absorbs the most amounts of variance
rip.hab.rda <- rda(rip.hab, scale = TRUE)
ordiplot(rip.hab.rda, choices = c(1,2), type = 'text', scaling = 2)
counts <- colSums(rip.hab)
ordiplot(rip.hab.rda, choices = c(1,2), type = 'none')
orditorp(rip.hab.rda, display = 'sites', col = 'maroon', pch = 19)
orditorp(rip.hab.rda, display = 'species', priority = counts, col = 'black', pch = 19)
p <- ordiplot(rip.hab.rda, choices = c(1,2), type = 'points')
identify(p, 'species')
p <- ordiplot(rip.hab.rda, choices = c(1,2), type = 'points')
identify(p, 'sites')
cols = c(sample(colours(), 10)) #10 random colors
p <- ordiplot(rip.hab.rda, choices = c(1,2), display = 'sites')
ordispider(p, groups = as.factor(birdhab$SUB), col = cols)
p <- ordiplot(rip.hab.rda, choices = c(1,2), display = 'sites')
ordiellipse(p, groups = as.factor(birdhab$SUB), conf = 0.9, col = cols)
p <- ordiplot(rip.hab.rda, choices = c(1,2), display = 'sites')
ordiellipse(p, groups = as.factor(birdhab$SUB), conf = 0.9, col = cols)
ordiplot(rip.normal.rda, choices = c(1,2), type = 'text', scaling = 2)
ordiplot(rip.normal.rda, choices = c(1,2), type = 'none', scaling = 2)
p <- ordiplot(rip.normal.rda, type = 'points')
identify(p, 'species')
identify(p, 'species')
cols = c(sample(colours(), 10))
p
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.95, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.90, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.90, col = cols)
cols = c(sample(colours(), 10))
p
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.90, col = cols)
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.95, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.95, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
p
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.95, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.90, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.90, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordiellipse(p, groups = as.factor(normal.data$Treatment), conf = 0.99, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.99, col = cols) #
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.99, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.99, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordiellipse(p, groups = as.factor(normal.data$week_number), conf = 0.95, col = cols) #
pca
p <- ordiplot(rip.normal.rda, type = 'points')
ordispider(p, groups = as.factor(normal.data$week_number), conf = 0.95, col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordispider(p, groups = as.factor(normal.data$week_number), col = cols) #
p <- ordiplot(rip.normal.rda, type = 'points')
ordispider(p, groups = as.factor(normal.data$week_number), col = cols)
View(normal.data)
maxfrequency <-
plot(normal.data)
maxfrequency <-
?plot
maxfrequency <-
ggplot(normal.data, aes(start_peak_freq, end_peak_freq))
maxfrequency <-
ggplot(normal.data, aes(start_peak_freq, end_peak_freq)) +
geom_point(amplitude)
maxfrequency <-
ggplot(normal.data, aes(start_peak_freq, end_peak_freq)) +
geom_point(normal.data$amplitude)
maxfrequency <-
ggplot(normal.data, aes(start_peak_freq, end_peak_freq)) +
geom_point()
maxfrequency <-
ggplot2::(normal.data, aes(start_peak_freq, end_peak_freq)) +
maxfrequency <-
ggplot2::aes(start_peak_freq, end_peak_freq)) +
maxfrequency <-
ggplot2::aes(start_peak_freq, end_peak_freq) +
geom_point()
g <- ggplot(normal.data, aes(start_peak_freq, end_peak_freq) +
g + geom_point()
maxfrequency <-
maxfrequency <-
g <- ggplot(normal.data, aes(start_peak_freq, end_peak_freq))
g + geom_point()
#Graphing Attempt
minfrequency <- aggregate(normal.data$min_freq ~ normal.data$week_number, FUN = min)
minfrequency
maxfrequency <- aggregate(normal.data$min_freq ~ normal.data$week_number, FUN = max)
maxfrequency
week1 <- aggregate(normal.data$week_number)[,1]
week1 <- aggregate(normal.data$week_number, FUN = )[,1]
?FUN
??FUN
week1 <- aggregate(normal.data$week_number, FUN = num())[,1]
week1 <- aggregate(normal.data$week_number, FUN = num[,1]
week1 <- aggregate(normal.data$week_number, FUN = num)[,1]
week1 <- aggregate(normal.data$week_number, FUN = num)
week1 <- aggregate(normal.data$week_number)
row1 <- normal.data[1,]
plot(row1)
row1
row1
View(row1)
ggplot(data = row1, aes(start_peak_freq, end_peak_freq))
ggplot(data = row1, aes(duration, amplitude))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(start_peak_freq)
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(row1$start_peak_freq)
geom_point(aes(row1$start_peak_freq)
min(normal.data$min_freq)
min(normal.data$min_freq)
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$end_peak_freq))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$duration)) +
geom_point(aes(row1$start_peak_freq, row1$end_peak_freq)) +
min(normal.data$min_freq)
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$duration))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$duration)) +
geom_point(aes(row1$end_peak_freq, row1$duration)) +
min(normal.data$min_freq)
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$duration)) +
geom_point(aes(row1$end_peak_freq, row1$duration))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$duration)) +
geom_point(aes(row1$end_peak_freq, row1$duration)) +
geom_point(aes(amplitude, row1$duration))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(row1$start_peak_freq, row1$duration)) +
geom_point(aes(row1$end_peak_freq, row1$duration)) +
geom_point(aes(row1$amplitude, row1$duration))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration)) +
geom_point(aes(amplitude, duration))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration))
ggplot(data = row1, aes(duration, amplitude)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration)) +
geom_point(aes(amplitude, duration))
min(normal.data$min_freq)
max(normal.data$max_freq)
frequencyrange <- 5000:116200
frequency
frequencyrange <- seq.int(5000, 116200)
frequencyrange
frequencyrange <- seq.int(5000, 116200)
normal.data <- normaal.data(frequencyrange)
normal.data <- normal.data(frequencyrange)
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
normal.data <- normal.data(frequencyrange)
normal.data <- data.frame(frequencyrange)
normal.data <- read_excel("/Users/jennajordan/Documents/GitHub/biostats-2/normal-data.xlsx")
normal.data <- normal.data(normal.data, frequencyrange)
normal.data <- data.frame(normal.data, frequencyrange)
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration)) +
geom_point(aes(amplitude, duration))
row1 <- normal.data[1,]
row1
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration)) +
geom_point(aes(amplitude, duration))
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration)) +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration)) +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_peak_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min__freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
row2 <- normal.data[1,]
ggplot(data = row2, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row2, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
row1 <- normal.data[1,]
row2 <- normal.data[2,]
ggplot(data = row2, aes(duration, frequencyrange)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
View(row2)
ggplot(data = row1, aes(frequencyrange, duration)) +
geom_point(aes(start_peak_freq, duration), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(frequencyrange, duration)) +
geom_point(aes(duration, start_peak_freq), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(duration, start_peak_freq), col = "green") +
geom_point(aes(end_peak_freq, duration), col = "red") +
geom_point(aes(min_freq, duration), col = "purple") +
geom_point(aes(max_freq, duration), col = "yellow") +
geom_point(aes(amplitude, duration), col = "blue")
ggplot(data = row1, aes(duration, frequencyrange)) +
geom_point(aes(duration, start_peak_freq), col = "green") +
geom_point(aes(duration, end_peak_freq), col = "red") +
geom_point(aes(duration, min_freq), col = "purple") +
geom_point(aes(duration, max_freq), col = "yellow") +
geom_point(aes(duration, amplitude), col = "blue")
View(normal.data)
min(normal.data$duration)
max(normal.data$duration)
totalduration <- seq.int(0.001, 0.22)
totalduration <- seq.int(0.001, 0.222)
ggplot(data = row1, aes(totalduration, frequencyrange)) +
geom_point(aes(duration, start_peak_freq), col = "green") +
geom_point(aes(duration, end_peak_freq), col = "red") +
geom_point(aes(duration, min_freq), col = "purple") +
geom_point(aes(duration, max_freq), col = "yellow") +
geom_point(aes(duration, amplitude), col = "blue")
minduration <- min(row1$duration)
maxduration <- max(row1$duration)
minduration
maxduration
ggplot(data = row1, aes(totalduration, frequencyrange)) +
geom_point(aes(duration, start_peak_freq), col = "green") +
geom_point(aes(duration, end_peak_freq), col = "red") +
geom_point(aes(duration, min_freq), col = "purple") +
geom_point(aes(duration, max_freq), col = "yellow") +
geom_point(aes(duration, amplitude), col = "blue")
firs <- read.csv(/Users/jennajordan/Documents/GitHub/biostats-2/data/"firs.csv")
firs <- read.csv(Users/jennajordan/Documents/GitHub/biostats-2/data/"firs.csv")
firs <- read.csv(jennajordan/Documents/GitHub/biostats-2/data/"firs.csv")
firs <- read.csv(Documents/GitHub/biostats-2/data/"firs.csv")
firs <- read.csv(Documents/GitHub/biostats-2/data/"firs.csv")
firs <- read.csvGitHub/biostats-2/data/"firs.csv")
firs <- read.csv(GitHub/biostats-2/data/"firs.csv")
firs <- read.csv(/GitHub/biostats-2/data/"firs.csv")
firs <- read.csv(/biostats-2/data/"firs.csv")
firs <- read.csv("/Users/jennajordan/Documents/GitHub/biostats-2/data/Lab 8/firs.csv")
View(firs)
View(firs)
firs <- firs[-which(firs$TOTCONES == 0), ]
hist(firs$TOTCONES, col = "forestgreen")
plot(firs$DBH, firs$TOTCONES, col = "white")
points(firs$DBH[which(firs$WAVE_NON == "w")], firs$TOTCONES[which(firs$WAVE_NON == "w")], col = "red", pch = 4)
points(firs$DBH[which(firs$WAVE_NON == "n")], firs$TOTCONES[which(firs$WAVE_NON == "n")], col = "forestgreen", pch = 21)
h0 <- glm(TOTCONES ~ DBH, data = firs, family = Gamma(link = "log"))
summary(h0)
hA <- glm(TOTCONES ~ DBH + WAVE_NON, data = firs, family = Gamma(link = "log"))
summary(hA)
h0.MLE <- logLik(h0)
hA.MLE <- logLik(hA)
h0.MLE; hA.MLE
anova(h0, hA, test = "LRT")
anova(h0, hA, test = "LRT")
h0.age <- glm(TOTCONES ~ AGE, data = firs, family = Gamma(link = "log"))
hA.age <- glm(TOTCONES ~ AGE, data = firs, family = Gamme(link = "log"))
hA.age <- glm(TOTCONES ~ AGE + WAVE_NON, data = firs, family = Gamma(link = "log"))
h0.age <- glm(TOTCONES ~ AGE, data = firs, family = Gamma(link = "log"))
hA.age <- glm(TOTCONES ~ AGE + WAVE_NON, data = firs, family = Gamma(link = "log"))
#set up models with interaction terms
hA.dbh.interact <- glm(TOTCONES ~ DBH * WAVE_NON, data = firs, family = Gamma(link = "log"))
hA.age.interact <- glm(TOTCONES ~ AGE * WAVE_NON, data = firs, family = Gamma(link = "log"))
#make vector of the models
formulae <- c(
formula(h0),
formula(hA),
formula(h0.age),
formula(hA.age),
formula(hA.dbh.interact),
formula(hA.age.interact)
)
formulae <- as.character(formulae)
formulae
#compute AIC values
aics <- AIC(h0, hA, h0.age, hA.age, hA.dbh.interact, hA.age.interact)
mod.table <- cbind(formulae, aics)
mod.table
#find the best model
min.AIC <- min(aics$AIC)
min.AIC
#Delta AIC
delta.AIC <- aics$AIC - min.AIC
delta.AIC
#AIC Weight
AIC.wt <- exp(-0.5*delta.AIC)/sum(exp(-0.5*delta.AIC))
AIC.wt <- format(AIC.wt, scientific = F) #not scientific notation
#Bind all matrix for easy viewing
mod.table <- cbind(mod.table, delta.AIC, AIC.wt)
mod.table <- mod.table[order(mod.table$AIC),] #sort by delta.AIC values
mod.table
mod.table <- mod.table[order(mod.table$AIC),] #sort by delta.AIC values (best model at top)
mod.table
litters <- read.csv("/Users/jennajordan/Documents/GitHub/biostats-2/data/Lab 8/littersize.csv")
litters <- read.csv("/Users/jennajordan/Documents/GitHub/biostats-2/data/Lab 8/litters.csv")
hist(litters$nEMBS, col = "tomato")
View(litters)
?glm
p2 <- glm(temp_seasonality, precip_seasonality, NFFD, breeding_temp, breeding_precip, NFFD_anomoly, data = litters, family = poisson)
p2 <- glm(temp_seasonality ~ precip_seasonality ~ NFFD ~ breeding_temp ~ breeding_precip ~ NFFD_anomoly, data = litters, family = poisson)
p2 <- glm(temp_seasonality ~ precip_seasonality ~ NFFD ~ breeding_temp ~ breeding_precip ~ NFFD_anomaly, data = litters, family = poisson)
p2 <- glm(temp_seasonality, precip_seasonality, NFFD, breeding_temp, breeding_precip ~ NFFD_anomaly, data = litters, family = poisson)
p1 <- glm(nEMBS ~ temp_seasonality + precip_seasonality + NFFD + breeding_temp + breeding_precip + NFFD_anomaly, data = litters, family = poisson)
p1
setwd("/Users/jennajordan/Documents/GitHub/biostats-2/data/Lab 8")
capture.output(p1, file = "Jordan_lab8.txt")
capture.output(p1, file = "Jordan_lab8_table1.txt")
p2 <- glm(nEMBS ~ temp_seasonality + precip_seasonality + NFFD, data = litters, family = poisson)
capture.output(p2, file = "Jordan_lab8_table2.txt")
p2
p3 <- glm(breeding_temp + breeding_precip + NFFD_anomaly, data = litters, family = poisson)
p3 <- glm(breeding_temp + breeding_precip + NFFD_anomaly, data = litters, family = poisson)
p3 <- glm(nEMBS ~ breeding_temp + breeding_precip + NFFD_anomaly, data = litters, family = poisson)
p3capture.output(p3, file = "Jordan_lab8_table3.txt")
p3
capture.output(p3, file = "Jordan_lab8_table3.txt")
AICvalues <- AIC(p1, p2, p3)
formulae <- c(
formula(p1),
formula(p2),
formula(p3))
formulae <- as.character(formulae)
formulae
formulas <- c(
formula(p1),
formula(p2),
formula(p3))
formulas <- as.character(formulas)
formulas
model.table <- cbind(formulas, AICvalues)
model.table
mod.table
best.AIC <- min(AICvalues$AIC)
best.AIC
deltaAIC <- AICvalues$AIC - best.AIC
AICweight <- exp(-0.5*deltaAIC)/sum(exp(-0.5*deltaAIC))
AICweight <- format(AIC.weight, scientific = F) #not scientific notation
AICweight <- exp(-0.5*deltaAIC)/sum(exp(-0.5*deltaAIC))
AICweight <- format(AIC.weight, scientific = F) #not scientific notation
AICweight <- format(AICweight, scientific = F) #not scientific notation
model.table <- cbind(model.table, deltaAIC, AICweight)
model.table
model.table <- mod.table[order(mod.table$AIC),] #sort by delta.AIC values (best model at top)
model.table
write.csv(, file = "Jordan_lab8_model-table.csv") #saves full model comparison as CSV
write.csv(model.table, file = "Jordan_lab8_model-table.csv") #saves full model comparison as CSV
model.table <- cbind(formulas, AICvalues)
model.table
best.AIC <- min(AICvalues$AIC)
deltaAIC <- AICvalues$AIC - best.AIC
AICweight <- exp(-0.5*deltaAIC)/sum(exp(-0.5*deltaAIC))
AICweight <- format(AICweight, scientific = F) #not scientific notation
model.table <- cbind(model.table, deltaAIC, AICweight)
model.table <- mod.table[order(model.table$AIC),] #sort by delta.AIC values (best model at top)
model.table
model.table
model.table <- cbind(model.table, deltaAIC, AICweight)
model.table <- model.table[order(model.table$AIC),] #sort by delta.AIC values (best model at top)
model.table
model.table <- cbind(formulas, AICvalues)
model.table
View(model.table)
best.AIC <- min(AICvalues$AIC)
deltaAIC <- AICvalues$AIC - best.AIC
AICweight <- exp(-0.5*deltaAIC)/sum(exp(-0.5*deltaAIC))
AICweight <- format(AICweight, scientific = F) #not scientific notation
model.table <- cbind(model.table, deltaAIC, AICweight)
View(model.table)
model.table <- model.table[order(model.table$AIC),] #sort by delta.AIC values (best model at top)
model.table
write.csv(model.table, file = "Jordan_lab8_model-table.csv") #saves full model comparison as CSV
